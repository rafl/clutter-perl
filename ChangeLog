2006-12-02  Emmanuele Bassi  <ebassi@openedhand.com>

	D xs/ClutterVideoTexture.xs
	A xs/ClutterAlpha.xs
	A xs/ClutterBehaviourOpacity.xs
	A xs/ClutterBehaviourScale.xs
	A xs/ClutterBehaviour.xs

	* maps: Update types.

	* xs/ClutterAlpha.xs:
	* xs/ClutterBehaviour.xs: Bind new behaviour API.

	* xs/ClutterBehaviour*.xs: Bind the new behaviour objects.

	* xs/ClutterActor.xs:
	* xs/ClutterLabel.xs:
	* xs/ClutterStage.xs:
	* xs/Clutter.xs: Update API.

	* MANIFEST:
	* Clutter.pm:
	* Makefile.PL: Update version, clean up, remove the
	version macro generation: upstream now has it too.

	* doctypes: Add GdkPixbuf and Pango types.

2006-07-16  Emmanuele Bassi  <ebassi@openedhand.com>

	* xs/ClutterEvent.xs: Fix a typo in clutterperl_event_unwrap().

2006-07-15  Emmanuele Bassi  <ebassi@openedhand.com>

	* xs/ClutterEvent.xs: Bind the Clutter::Event object.

	* examples/rects.pl: Add an example of the Clutter::Event
	accessors.

2006-07-08  Emmanuele Bassi  <ebassi@openedhand.com>

	* t/*.t: Initialize Clutter when testing, otherwise most of
	the methods won't work.

2006-07-08  Emmanuele Bassi  <ebassi@openedhand.com>

	* Makefile.PL: Require clutter HEAD.

2006-07-06  Emmanuele Bassi  <ebassi@openedhand.com>

	* xs/*.xs: Remove the _noinc from all the classes inheriting from
	ClutterActor, as it is now a "floating" object.

	* xs/ClutterActor.xs: Re-sync with clutter API changes.

2006-06-25  Emmanuele Bassi  <ebassi@openedhand.com>

	* xs/ClutterCloneTexture.xs:
	* xs/ClutterVideoTexture.xs: Implement the remaining textures.

	* xs/ClutterMedia.xs: Implement Clutter::Media interface; only
	the C part works - implementing the interface in Perl will
	require some more black magic.

2006-06-24  Emmanuele Bassi  <ebassi@openedhand.com>

	A examples/rects.pl

	* MANIFEST:
	* examples/rects.pl: Add an example program (it's the same
	one used for the Python bindings).

2006-06-24  Emmanuele Bassi  <ebassi@openedhand.com>

	* xs/ClutterTexture.xs:
	* xs/ClutterTimeline.xs: Implemented Clutter::Texture and
	Clutter::Timeline.

2006-06-23  Emmanuele Bassi  <ebassi@openedhand.com>

	* xs/ClutterRectangle.xs: Implement Clutter::Rectangle

	* xs/ClutterTypes.xs: Implement Clutter::ActorBox

	* xs/ClutterActor.xs: Rename parameter name "self" to "actor", so
	that the apidoc is coherent with the object name.

	* xs/ClutterGroup.xs: Implement Clutter::Group::foreach(); rename
	Clutter::Group::add_many to ::add, so that the semantics is kept;
	implement the rest of Clutter::Group methods.

	* xs/ClutterLabel.xs: Implement Clutter::Label.  The constructor
	takes two optional parameters which are dogfed to the relative
	accessors.

	* t/ClutterGroup.t:
	* t/ClutterLabel.t:
	* t/ClutterRectangle.t: Add test suites for the newly wrapped
	objects.

2006-06-23  Emmanuele Bassi  <ebassi@openedhand.com>

	* *: Initial import of the Perl bindings for Clutter
